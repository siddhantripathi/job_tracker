{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, connectAuthEmulator } from 'firebase/auth';\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\nimport { getFunctions, connectFunctionsEmulator } from 'firebase/functions';\n\n// Firebase config - actual project configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAIeeqRAqZSKJzFr5GnfgIvpjwfYU9z_OU\",\n  authDomain: \"job-tracker-bd6dc.firebaseapp.com\",\n  projectId: \"job-tracker-bd6dc\",\n  storageBucket: \"job-tracker-bd6dc.firebasestorage.app\",\n  messagingSenderId: \"831968228747\",\n  appId: \"1:831968228747:web:c2e75da41131ded1a12b8e\",\n  measurementId: \"G-X8T9QY9VBJ\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase services\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const functions = getFunctions(app);\n\n// Configure Google Auth Provider\nexport const googleProvider = new GoogleAuthProvider();\ngoogleProvider.addScope('https://www.googleapis.com/auth/gmail.readonly');\n\n// Connect to emulators in development\nconst isDevelopment = process.env.NODE_ENV === 'development';\nconst useEmulators = process.env.REACT_APP_USE_EMULATORS === 'true' || isDevelopment;\nconsole.log('Environment:', {\n  NODE_ENV: process.env.NODE_ENV,\n  REACT_APP_USE_EMULATORS: process.env.REACT_APP_USE_EMULATORS,\n  useEmulators,\n  isDevelopment\n});\nconst isEmulatorConnected = {\n  auth: false,\n  firestore: false,\n  functions: false\n};\nif (useEmulators) {\n  try {\n    // Connect to Auth emulator\n    if (!isEmulatorConnected.auth) {\n      connectAuthEmulator(auth, `http://localhost:9099`, {\n        disableWarnings: true\n      });\n      isEmulatorConnected.auth = true;\n      console.log('‚úÖ Connected to Firebase Auth emulator at localhost:9099');\n    }\n  } catch (error) {\n    console.log('‚ö†Ô∏è Auth emulator connection failed:', error.message);\n  }\n  try {\n    // Connect to Firestore emulator\n    if (!isEmulatorConnected.firestore) {\n      connectFirestoreEmulator(db, 'localhost', 8080);\n      isEmulatorConnected.firestore = true;\n      console.log('‚úÖ Connected to Firestore emulator at localhost:8080');\n    }\n  } catch (error) {\n    console.log('‚ö†Ô∏è Firestore emulator connection failed:', error.message);\n  }\n  try {\n    // Connect to Functions emulator\n    if (!isEmulatorConnected.functions) {\n      connectFunctionsEmulator(functions, 'localhost', 5001);\n      isEmulatorConnected.functions = true;\n      console.log('‚úÖ Connected to Firebase Functions emulator at localhost:5001');\n    }\n  } catch (error) {\n    console.log('‚ö†Ô∏è Functions emulator connection failed:', error.message);\n  }\n  console.log('üîß Development mode: Using Firebase emulators');\n} else {\n  console.log('üöÄ Production mode: Using Firebase services');\n}\nexport default app;","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","connectAuthEmulator","getFirestore","connectFirestoreEmulator","getFunctions","connectFunctionsEmulator","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","functions","googleProvider","addScope","isDevelopment","process","env","NODE_ENV","useEmulators","REACT_APP_USE_EMULATORS","console","log","isEmulatorConnected","firestore","disableWarnings","error","message"],"sources":["C:/Users/siddh/OneDrive/Desktop/Projects/Job_tracker/frontend/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider, connectAuthEmulator } from 'firebase/auth';\r\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\r\nimport { getFunctions, connectFunctionsEmulator } from 'firebase/functions';\r\n\r\n// Firebase config - actual project configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAIeeqRAqZSKJzFr5GnfgIvpjwfYU9z_OU\",\r\n  authDomain: \"job-tracker-bd6dc.firebaseapp.com\",\r\n  projectId: \"job-tracker-bd6dc\",\r\n  storageBucket: \"job-tracker-bd6dc.firebasestorage.app\",\r\n  messagingSenderId: \"831968228747\",\r\n  appId: \"1:831968228747:web:c2e75da41131ded1a12b8e\",\r\n  measurementId: \"G-X8T9QY9VBJ\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase services\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const functions = getFunctions(app);\r\n\r\n// Configure Google Auth Provider\r\nexport const googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.addScope('https://www.googleapis.com/auth/gmail.readonly');\r\n\r\n// Connect to emulators in development\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\nconst useEmulators = process.env.REACT_APP_USE_EMULATORS === 'true' || isDevelopment;\r\n\r\nconsole.log('Environment:', {\r\n  NODE_ENV: process.env.NODE_ENV,\r\n  REACT_APP_USE_EMULATORS: process.env.REACT_APP_USE_EMULATORS,\r\n  useEmulators,\r\n  isDevelopment\r\n});\r\n\r\nconst isEmulatorConnected = {\r\n  auth: false,\r\n  firestore: false,\r\n  functions: false\r\n};\r\n\r\nif (useEmulators) {\r\n  try {\r\n    // Connect to Auth emulator\r\n    if (!isEmulatorConnected.auth) {\r\n      connectAuthEmulator(auth, `http://localhost:9099`, { disableWarnings: true });\r\n      isEmulatorConnected.auth = true;\r\n      console.log('‚úÖ Connected to Firebase Auth emulator at localhost:9099');\r\n    }\r\n  } catch (error) {\r\n    console.log('‚ö†Ô∏è Auth emulator connection failed:', error.message);\r\n  }\r\n\r\n  try {\r\n    // Connect to Firestore emulator\r\n    if (!isEmulatorConnected.firestore) {\r\n      connectFirestoreEmulator(db, 'localhost', 8080);\r\n      isEmulatorConnected.firestore = true;\r\n      console.log('‚úÖ Connected to Firestore emulator at localhost:8080');\r\n    }\r\n  } catch (error) {\r\n    console.log('‚ö†Ô∏è Firestore emulator connection failed:', error.message);\r\n  }\r\n\r\n  try {\r\n    // Connect to Functions emulator\r\n    if (!isEmulatorConnected.functions) {\r\n      connectFunctionsEmulator(functions, 'localhost', 5001);\r\n      isEmulatorConnected.functions = true;\r\n      console.log('‚úÖ Connected to Firebase Functions emulator at localhost:5001');\r\n    }\r\n  } catch (error) {\r\n    console.log('‚ö†Ô∏è Functions emulator connection failed:', error.message);\r\n  }\r\n\r\n  console.log('üîß Development mode: Using Firebase emulators');\r\n} else {\r\n  console.log('üöÄ Production mode: Using Firebase services');\r\n}\r\n\r\nexport default app; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}